import tensorflow as tf
from tensorflow.keras.layers import Input, Dense, Reshape, Flatten, Conv2D, Conv2DTranspose, LeakyReLU, BatchNormalization, concatenate
from tensorflow.keras.models import Model
from tensorflow.keras.optimizers import Adam

# Define the binary cross entropy loss function
cross_entropy = tf.keras.losses.BinaryCrossentropy(from_logits=False)

def generator_loss(fake_output):
    """
    Calculates the generator loss.

    Parameters:
    - fake_output: The output generated by the generator model.

    Returns:
    - The generator loss.
    """
    return cross_entropy(tf.ones_like(fake_output), fake_output)

def discriminator_loss(real_output, fake_output):
    """
    Calculates the discriminator loss.

    Parameters:
    - real_output: The output from the discriminator for real images.
    - fake_output: The output from the discriminator for fake images.

    Returns:
    - The discriminator loss.
    """
    real_loss = cross_entropy(tf.ones_like(real_output), real_output)
    fake_loss = cross_entropy(tf.zeros_like(fake_output), fake_output)
    total_loss = real_loss + fake_loss
    return total_loss
